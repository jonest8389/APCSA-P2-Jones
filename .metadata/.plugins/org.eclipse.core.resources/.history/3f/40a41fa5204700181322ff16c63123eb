//© A+ Computer Science  -  www.apluscompsci.com
//Name -
//Date -
//Class - 
//Lab  -

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Canvas;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import static java.lang.Character.*;
import java.awt.image.BufferedImage;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class OuterSpace extends Canvas implements KeyListener, Runnable
{
	private Ship ship;
	private Alien alienOne;
	private Alien alienTwo;
	private Ammo ammoTest;

	private AlienHorde horde;
	private Bullets shots;


	private boolean[] keys;
	private BufferedImage back;

	public OuterSpace()
	{
		setBackground(Color.black);

		keys = new boolean[5];

		//instantiate other instance variables
		ship = new Ship(350,500,40,40,1);
		alienOne = new Alien(350,100);
		alienTwo = new Alien(425,100);
		ammoTest = new Ammo(-100,-100,2);
		
		int horderowsize = 8;
		horde = new AlienHorde(horderowsize);
		for (int i = 0;i < (horderowsize * 2);i++)
		{
			int aax = (i + 1) * 70;
			int aay = 100;
			if (i >= horderowsize)
			{
				aay = 300;
				aax -= 560;
			}
			horde.add(new Alien(aax,aay,0));
		}
		
		shots = new Bullets();
		
		System.out.println(horde.toString());

		this.addKeyListener(this);
		new Thread(this).start();

		setVisible(true);
	}

   public void update(Graphics window)
   {
	   paint(window);
   }

	public void paint( Graphics window )
	{
		//set up the double buffering to make the game animation nice and smooth
		Graphics2D twoDGraph = (Graphics2D)window;

		//take a snap shop of the current screen and same it as an image
		//that is the exact same width and height as the current screen
		if(back==null)
		   back = (BufferedImage)(createImage(getWidth(),getHeight()));

		//create a graphics reference to the back ground image
		//we will draw all changes on the background image
		Graphics graphToBack = back.createGraphics();

		graphToBack.setColor(Color.CYAN);
		graphToBack.drawString("StarFighter ", 125, 150 );
		graphToBack.setColor(Color.BLACK);
		graphToBack.fillRect(0,0,800,600);

		ship.draw(graphToBack);
		horde.drawEmAll(graphToBack);	
		
		alienOne.draw(graphToBack);
		
		for (Alien[] row : horde.getList())
		{
			for (Alien val : row)
			{
				if (val.getX() < 0)
				{
					val.setRowDirection(1,1);
				}
				else if (val.getX() > 750)
				{
					val.setRowDirection(1,2);
				}
			}
		}
		
		//horde.moveEmAll();
		

		if(keys[0] == true)
		{
			ship.move("RIGHT");
		}
		if(keys[1] == true)
		{
			ship.move("LEFT");
		}
		if(keys[2] == true)
		{
			ship.move("DOWN");
		}
		if(keys[3] == true)
		{
			ship.move("UP");
		}
		//add code to move Ship, Alien, etc.
		
		if (keys[4])
		{
			shots.add(new Ammo(ship.getX() + 16,ship.getY(),2));
			System.out.println(horde.toString());
		}
		shots.moveEmAll();
		shots.cleanEmUp();

		shots.drawEmAll(graphToBack);
		//add in collision detection to see if Bullets hit the Aliens and if Bullets hit the Ship
		for (int i = 0;i < shots.getList().size();i++)
		{
			for (Alien[] row : horde.getList())
			{
				for (Alien val : row)
				{
					if (shots.getList().get(i).getX() >= val.getX() &&
						shots.getList().get(i).getX() <= val.getX() + val.getWidth()
						 && shots.getList().get(i).getY() >= val.getY() && 
						 shots.getList().get(i).getY() <= val.getY() + val.getHeight())
					{
						shots.getList().get(i).setX(-100); shots.getList().get(i).setY(-100);
						val.setX(-100); val.setY(-100);
						shots.getList().get(i).setKilled(val);
					}
				}
			}
		}
		

		twoDGraph.drawImage(back, null, 0, 0);
		back = null;
	}


	public void keyPressed(KeyEvent e)
	{
		if (e.getKeyCode() == KeyEvent.VK_LEFT)
		{
			keys[0] = true;
		}
		if (e.getKeyCode() == KeyEvent.VK_RIGHT)
		{
			keys[1] = true;
		}
		if (e.getKeyCode() == KeyEvent.VK_UP)
		{
			keys[2] = true;
		}
		if (e.getKeyCode() == KeyEvent.VK_DOWN)
		{
			keys[3] = true;
		}
		if (e.getKeyCode() == KeyEvent.VK_SPACE)
		{
			keys[4] = true;
		}
		repaint();
	}

	public void keyReleased(KeyEvent e)
	{
		if (e.getKeyCode() == KeyEvent.VK_LEFT)
		{
			keys[0] = false;
		}
		if (e.getKeyCode() == KeyEvent.VK_RIGHT)
		{
			keys[1] = false;
		}
		if (e.getKeyCode() == KeyEvent.VK_UP)
		{
			keys[2] = false;
		}
		if (e.getKeyCode() == KeyEvent.VK_DOWN)
		{
			keys[3] = false;
		}
		if (e.getKeyCode() == KeyEvent.VK_SPACE)
		{
			keys[4] = false;
		}
		repaint();
	}

	public void keyTyped(KeyEvent e)
	{
      //no code needed here
	}

   public void run()
   {
   	try
   	{
   		while(true)
   		{
   		   Thread.currentThread().sleep(5);
            repaint();
        }
      }catch(Exception e)
      {
      }
  	}
}

